"""
深拷贝就是完全和以前的对象没有任何关系了，原来的对象怎么改都不会影响当前对象

浅拷贝出来的新对象的地址和原对象是不一样的，但是新对象里面的可变元素（如列表）的地址和
原对象里的可变元素的地址是相同的 拷贝它拷贝的是浅层次的数据结构（不可变元素），
对象里的可变元素作为深层次的数据结构并没有被拷贝到新地址里面去，
而是和原对象里的可变元素指向同一个地址
"""
import copy


a = [1, 2, 3, 4, ['a', 'b']] 
b = a
c = copy.copy(a)
d = copy.deepcopy(a)
a.append(5)
a[4].append('c')
print('a = ', a)  # a =  [1, 2, 3, 4, ['a', 'b', 'c'], 5]
print('b = ', b)  # b =  [1, 2, 3, 4, ['a', 'b', 'c'], 5]
print('c = ', c)  # c =  [1, 2, 3, 4, ['a', 'b', 'c']]
print('d = ', d)  # d =  [1, 2, 3, 4, ['a', 'b']]
